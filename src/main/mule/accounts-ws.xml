<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<db:config name="MySQL_Database_Config" doc:name="Database Config" doc:id="eb74ccb6-67a0-408d-be0b-23184b23d835" >
		<db:my-sql-connection host="iltdb.learn.mulesoft.com" port="3306" user="mule" password="mule" database="training" />
	</db:config>
	<flow name="getAccounts" doc:id="8856bdb7-14f2-4164-8eba-f5656cd36fa2" >
		<http:listener doc:name="GET /accounts" doc:id="cdc69233-ac07-47ed-80cf-ed615a9a98e2" config-ref="accounts-api-httpListenerConfig" path="/accounts" allowedMethods="GET"/>
		<db:select doc:name="Fetch Accounts" doc:id="92738529-65a6-4521-a8c1-4328cfc7e742" config-ref="MySQL_Database_Config">
			<db:sql ><![CDATA[SELECT * FROM flights_customers
	WHERE accountType = :type]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"type": attributes.queryParams.'type'
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Java to JSON" doc:id="c7661bec-b1e4-4ea8-b5b3-95607136a04c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.accountID,
	firstName: (payload01.name default "" splitBy " ")[0],
	lastName: (payload01.name default "" splitBy " ")[1],
	address: ((payload01.street default "") ++ ", " ++ (payload01.city default "")),
	postal: payload01.postal default "",
	country: payload01.country default "",
	creationDate: payload01.creationDate as String default "",
	accountType: payload01.accountType default "",
	miles: payload01.miles default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="70bd5493-bae8-4302-a88d-b8452658357f" message="#[payload]"/>
	</flow>
	<flow name="getAccountByID" doc:id="5817ae92-9436-443f-9150-ce08d58de8e7" >
		<http:listener doc:name="GET /accounts/{id}" doc:id="fb16afdc-8789-452a-bd0f-0536d76a167a" config-ref="accounts-api-httpListenerConfig" path="/accounts/{id}" allowedMethods="GET" />
		<db:select doc:name="Fetch Account" doc:id="f99a0212-bc0e-44d7-856c-5bb489f56586" config-ref="MySQL_Database_Config" >
			<db:sql ><![CDATA[SELECT * FROM flights_customers
	WHERE accountid = :ID;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	"type": attributes.queryParams.'type' default "",
	"ID": attributes.uriParams.'id'
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Java to JSON" doc:id="9e03b0e6-55a6-46ba-b374-5bc604d99d65" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.accountID,
	firstName: (payload01.name default "" splitBy " ")[0],
	lastName: (payload01.name default "" splitBy " ")[1],
	address: ((payload01.street default "") ++ ", " ++ (payload01.city default "")),
	postal: payload01.postal default "",
	country: payload01.country default "",
	creationDate: payload01.creationDate as String default "",
	accountType: payload01.accountType default "",
	miles: payload01.miles default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="897ca136-9a7a-4e70-a941-2335816ba6de" message="#[payload]" />
	</flow>
</mule>
